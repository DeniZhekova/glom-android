apply plugin: 'com.android.feature'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    baseFeature true

    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName

        consumerProguardFiles 'proguard-rules.pro'

        // support vector graphics for pre-lollipop devices
        vectorDrawables.useSupportLibrary = true

        // base host url for instant app
        resValue "string", "instant_app_host", "jitrapon.io"
    }

    signingConfigs {
        release {
            keyAlias rootProject.keystoreProperties['keyAlias']
            keyPassword rootProject.keystoreProperties['keyPassword']
            storeFile file(rootProject.releaseKeystorePath)
            storePassword rootProject.keystoreProperties['storePassword']
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        debug {
            minifyEnabled false
            ext.enableCrashlytics = false           //TODO need to disable the Crashlytics kit at runtime
            ext.alwaysUpdateBuildId = false
            debuggable true
        }
        release {
            minifyEnabled true
            crunchPngs false
            debuggable false
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // constraint layout
    api 'com.android.support.constraint:constraint-layout:1.0.2'

    // instant app
    implementation ("com.google.android.instantapps:instantapps:$rootProject.instantAppVersion") {
        exclude group: 'com.android.support'
    }

    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre8:$rootProject.kotlinVersion"

    // support library
    api("com.android.support:design:$rootProject.supportLibVersion") {
        force = true
    }
    api("com.android.support:appcompat-v7:$rootProject.supportLibVersion") {
        force = true
    }
    api("com.android.support:recyclerview-v7:$rootProject.supportLibVersion") {
        force = true
    }
    api("com.android.support:cardview-v7:$rootProject.supportLibVersion") {
        force = true
    }
    api "com.android.support.constraint:constraint-layout:$rootProject.constraintLayoutVersion"

    // architecture components
    api "android.arch.lifecycle:extensions:$rootProject.archLifecycleVersion"
    implementation "android.arch.lifecycle:common-java8:$rootProject.archLifecycleVersion"
    annotationProcessor "android.arch.lifecycle:compiler:$rootProject.archLifecycleVersion"
    testImplementation "android.arch.core:core-testing:$rootProject.archLifecycleVersion"

    // room
    implementation "android.arch.persistence.room:runtime:$rootProject.archRoomVersion"
    annotationProcessor "android.arch.persistence.room:compiler:$rootProject.archRoomVersion"
    testImplementation "android.arch.persistence.room:testing:$rootProject.archRoomVersion"
    implementation "android.arch.paging:runtime:$rootProject.archPagingVersion"

    // dagger
    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$rootProject.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-android-processor:$rootProject.daggerVersion"

    // facebook
    implementation "com.facebook.android:facebook-login:$rootProject.facebookSdkVersion"

    // reactive
    api "io.reactivex.rxjava2:rxjava:$rootProject.rxJavaVersion"
    api "io.reactivex.rxjava2:rxandroid:$rootProject.rxAndroidVersion"

    // testing
    testImplementation "junit:junit:$rootProject.junitVersion"
    androidTestImplementation("com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    // modules
    feature project(':board')
    feature project(":map")
    feature project(":explore")
    feature project(":profile")
    application project(':app')
}
